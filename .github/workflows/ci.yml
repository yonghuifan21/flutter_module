
name: CI
on:
 push:
    branches: 
      - main
jobs:
  build_ios:
    runs-on: macos-latest
    env:
      SHEME: Runner
      BUILD_CONFIGURATION: Release
      ios_out_path: /Users/runner/work/build/flutter-libs/frameworks

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.5'
          channel: 'stable'

      - name: Flutter clean
        run: flutter clean

      - name: Restore packages
        run: flutter pub get

      - name: Export Framework
        run: |
          echo '开始创建文件件'
          echo $ios_out_path
          rm -rf build
          flutter build ios-framework --no-profile --no-debug || exit -1 
          echo "\n5\. 输出文件到 $ios_out_path"
          rm -rf $ios_out_path
          mkdir -p $ios_out_path
          cp -r build/ios/framework/Release/App.xcframework $ios_out_path
          echo 'App.xcframework搬运完成'
          if [ -d ${ios_out_path} ]; then
                echo "编译成功......"${ios_out_path}
          else
                echo "编译失败......"${ios_out_path}
          fi

      - name: Git pull tag
        env: 
          # Github 仓库
          GITHUB_REPO: github.com/yonghuifan21/FlutterModuleSDK.git
          GITHUB_USERNAME: yonghuifan21
          GITHUB_EMAIL: andy_yonghui@163.com
          GITHUB_TOKEN: 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
        run: |
          rm -rf $ios_out_path
          mkdir -p $ios_out_path
          cd $ios_out_path
          git init 
          git config user.name "$GITHUB_USERNAME"
          git config user.email "$GITHUB_EMAIL"
          git add .
          git checkout -b release
          scheme='https://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@'
          echo 'scheme'$scheme
          proj_path=$scheme$GITHUB_REPO
          echo '项目地址'$proj_path
          git remote add origin $proj_path
          echo '设置源路径之前'
          git remote -v
          git remote set-url origin $proj_path
          echo '设置源路径之后'
          git remote -v
          git commit -m '打包提交成功' || echo "No changes, nothing to commit!"
          echo '代码提交成功'
          git push
          echo "代码推送成功"
          LatestTag=`git describe --tags `git rev-list --tags --grep prod --max-count=1`
          indexdot=`echo "$LatestTag" | awk -F ''$.'' '{printf "%d", length($0)-length($NF)}'`
          endStr=${string:$(indexdot+1)}
          echo "获取到的tag最后几位" ${endStr}
          endtagint = {{endStr}}+1
          echo "修改之后的tag ${endtagint}"
          getTag=${${LatestTag}/%${endStr}/${endtagint}}
          echo "新增的版本号...... ${getTag}"
          git tag ${getTag}
          git push origin ${getTag}