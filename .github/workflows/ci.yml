
name: CI
on:
 push:
    branches: 
      - main
jobs:
  build_ios:
    runs-on: macos-latest
    env:
      SHEME: Runner
      BUILD_CONFIGURATION: Release
      ios_out_path: /Users/runner/work/build/flutter-libs/frameworks
    steps:
      # - name: Checkout the code
      #   uses: actions/checkout@v2
      # - name: Install and set Flutter version
      #   uses: subosito/flutter-action@v2
      #   with:
      #     flutter-version: '3.0.5'
      #     channel: 'stable'

      # - name: Flutter clean
      #   run: flutter clean

      # - name: Restore packages
      #   run: flutter pub get

      - name: Export Framework
        run: |
          echo '开始创建文件件'
          echo $ios_out_path
          rm -rf build
     #      flutter build ios-framework --no-profile --no-debug || exit -1 
          echo "\n5\. 输出文件到 $ios_out_path"
          rm -rf $ios_out_path
          mkdir -p $ios_out_path/App.xcframework
      #    cp -r build/ios/framework/Release/App.xcframework $ios_out_path/App.xcframework
          echo 'App.xcframework搬运完成'
          if [ -d ${ios_out_path} ]; then
                echo "编译成功......"${ios_out_path}
          else
                echo "编译失败......"${ios_out_path}
          fi
    
      # - name: Git push tag
      #   env: 
      #     GITHUB_REPO: github.com/yonghuifan21/FlutterModuleSDK.git
      #     GITHUB_USERNAME: 'yonghuifan21'
      #     GITHUB_EMAIL: 'andy_yonghui@163.com'
      #     pat_token: ${{ secrets.PAT_TOKEN_FLUTTER }}
      #     LOCAL_TOKEN: ${{ secrets.ACC_TOKEN }}
      #     RSA_TOKEN: ${{ secrets.RSA_TOKEN }}
      #     RSA_PUB_TOKEN: ${{ secrets.RSA_PUB_TOKEN }}
      #   run: |
      #     cd $ios_out_path
      #     ls
      #     git init 
      #     git config user.name $GITHUB_USERNAME
      #     git config user.email $GITHUB_EMAIL
      #     git add .
      #     branchname='release'
      #     git checkout -b ${branchname}
      #     echo ${{ secrets.PAT_TOKEN_FLUTTER }}
      #     at='@'
      #     http='https://'
      #     scheme=$GITHUB_USERNAME:$pat_token$at
      #     echo 'scheme'$scheme
      #     proj_path=$http$scheme$GITHUB_REPO
      #     homepage=$http$GITHUB_REPO
      #     echo '项目地址'$proj_path
      #     git remote add origin $proj_path
      #     echo '设置源路径之前'
      #     git remote -v
      #     git remote set-url origin $proj_path
      #     echo '设置源路径之后'
      #     #创建pod相关文件
      #     yhflutter_pod_file="$ios_out_path/FlutterModuleSDK.podspec"
      #     touch "${ios_out_path}/LICENSE";
      #     touch $ios_out_path;
      #     echo "Pod::Spec.new do |s|" >> $yhflutter_pod_file
      #     echo "  s.name             = 'FlutterModuleSDK'" >> $yhflutter_pod_file
      #     echo "  s.version          = '1.0.0'" >> $yhflutter_pod_file
      #     echo "  s.summary          = 'a flutter project'" >> $yhflutter_pod_file
      #     echo "  s.description      = <<-DESC" >> $yhflutter_pod_file
      #     echo "  A new flutter plugin project." >> $yhflutter_pod_file
      #     echo "  DESC" >> $yhflutter_pod_file
      #     echo "  s.homepage         = 'https://github.com/yonghuifan21/FlutterModuleSDK'" >> $yhflutter_pod_file
      #     echo "  s.license          = { :file => './LICENSE' }" >> $yhflutter_pod_file
      #     echo "  s.author           = { 'Flutter Dev Team' => 'flutter-dev@googlegroups.com' }" >> $yhflutter_pod_file
      #     echo "  s.source           = { :git => 'git@github.com:yonghuifan21/FlutterModuleSDK.git', :tag => s.version.to_s }" >> $yhflutter_pod_file
      #     echo "  s.ios.vendored_framework   = '*.xcframework'" >> $yhflutter_pod_file
      #     echo "  s.ios.deployment_target = '9.0'" >> $yhflutter_pod_file
      #     echo "  s.static_framework = true" >> $yhflutter_pod_file
      #     echo "end" >> $yhflutter_pod_file
      #     git remote -v
      #     git add .
      #     git commit -m '11打包提交成功' || echo "No changes, nothing to commit!"
      #     echo '代码提交成功'
      #     sudo git push -u -f --force --quiet --set-upstream origin ${branchname}
      #     echo "代码推送成功"
      #     getTag=${branchname}_$((`date '+%s'`*1000+`date '+%N'`/1000000))
      #     echo '$getTag'
      #     echo "新增的版本号...... ${getTag}"
      #     git tag ${getTag}
      #     git push origin ${getTag}
          
