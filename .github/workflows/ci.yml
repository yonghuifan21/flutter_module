# name: CI
# on:
#  push:
#     branches: 
#       - main
# jobs:
#   build_ios:
#     runs-on: macos-latest
#     env:
#       SHEME: Runner
#       BUILD_CONFIGURATION: Release

#     steps:
#     - name: Checkout the code
#     - uses: actions/checkout@v2

#     - name: Install and set Flutter version
#     - uses: subosito/flutter-action@v2
#     - with:
#         flutter-version: '3.0.5'
#         channel: 'stable'

#     - name: flutter clean
#     - run: flutter clean

#     - name: Restore packages
#     - run: flutter pub get

#     - name: Create Framework dir
#       env: 
#         GITHUB_REPO: github.com/yonghuifan21/FlutterModuleSDK.git
#     - run: |
#         echo '开始创建文件件'
#         ios_out_path='/Users/runner/work/build/flutter-libs/frameworks'
#         echo $ios_out_path
#         rm -rf build
#         flutter build ios-framework --no-profile --no-debug || exit -1 
#         echo "\n5\. 输出文件到 $ios_out_path"
#         rm -rf $ios_out_path
#         mkdir -p $ios_out_path
#         cp -r build/ios/framework/Release/App.xcframework $ios_out_path
#         echo 'App.xcframework搬运完成'
#         if [ -d ${ios_out_path} ]; then
#               echo "编译成功......"${ios_out_path}
#         else
#               echo "编译失败......"${ios_out_path}
#         fi
#         cd $ios_out_path
#     #     sudo touch READE.md
#     #     echo "# test111" >> README.md
#         git init & git add .
#         git config user.name "yonghuifan21"
#         git config user.email "andy_yonghui@163.com"
#         git add READE.md
#         git add .
#         git checkout -b release
#         git remote -v
#         git remote rm origin
#         git remote add origin "https://${{ secrets.ACCESS_TOKEN }}@$GITHUB_REPO"
#         git remote -v
#         git commit -m '打包提交成功' || echo "No changes, nothing to commit!"
#         echo '代码提交成功'
#         # git pull origin "https://${{ secrets.ACCESS_TOKEN }}@$GITHUB_REPO"
#         # echo "代码拉取成功"
#         git push -u origin release
#         echo "代码推送成功"
#         LatestTag=`git describe --tags `git rev-list --tags --grep prod --max-count=1`
#         indexdot=`echo "$LatestTag" | awk -F ''$.'' '{printf "%d", length($0)-length($NF)}'`
#         endStr=${string:$(indexdot+1)}
#         echo "获取到的tag最后几位" ${endStr}
#         endtagint = {{endStr}}+1
#         echo "修改之后的tag ${endtagint}"
#         getTag=${${LatestTag}/%${endStr}/${endtagint}}
#         getTag='1.0.3'
#         echo "新增的版本号...... ${getTag}"
#         git tag ${getTag}
#         git push origin ${getTag}


name: Blog CI/CD

# 触发条件：在 push 到 hexo-blog-backup 分支后触发
on:
  push:
    branches: 
      - hexo-blog-backup

env:
  TZ: Asia/Shanghai

jobs:
  blog-cicd:
    name: Hexo blog build & deploy
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 系统作为编译部署的环境

    steps:
    - name: Checkout codes
      uses: actions/checkout@v2

    - name: Setup node
      # 设置 node.js 环境
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Cache node modules
      # 设置包缓存目录，避免每次下载
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Install hexo dependencies
      # 下载 hexo-cli 脚手架及相关安装包
      run: |
        npm install hexo-cli gulp -g
        npm install

    - name: Generate files
      # 编译 markdown 文件
      run: |
        hexo clean
        hexo generate

    - name: Execute gulp task
      run: gulp

    - name: Deploy hexo blog
      env: 
        # Github 仓库
        GITHUB_REPO: github.com/yifanzheng/yifanzheng.github.io
        # Coding 仓库
        CODING_REPO: e.coding.net/yifanzheng/blogs.git
        # Gitee 仓库
        GITEE_REPO: gitee.com/yifanzheng/yifanzheng.gitee.io
      # 将编译后的博客文件推送到指定仓库
      run: |
        cd ./public && git init && git add .
        git config user.name "yifanzheng"
        git config user.email "zhengyifan1996@outlook.com"
        git add .
        git commit -m "GitHub Actions Auto Builder at $(date +'%Y-%m-%d %H:%M:%S')"
        git push --force --quiet "https://${{ secrets.ACCESS_TOKEN }}@$GITHUB_REPO" master:master
        git push --force --quiet "https://RoYFbFDSfM:${{ secrets.CODING_TOKEN }}@$CODING_REPO" master:master
        git push --force --quiet "https://yifanzheng:${{ secrets.GITEE_ACCESS_TOKEN }}@$GITEE_REPO" master:master